inner_join(cars8,ism2,by=c('Year','Month')) ->df
df%>%
group_by(Commodity,Year,Month)%>%
summarise(Carloads=sum(Carloads))->df2
g <- ggplot(data = d2, aes(x = Container, y = Carloads,na.rm=TRUE))
g + geom_boxplot() + facet_grid(.~Year)
#q11
df%>%
group_by(Commodity,Year,Month)%>%
summarise(Carloads=sum(Carloads))->df2
g <- ggplot(data = df2, aes(x = Container, y = Carloads,na.rm=TRUE))
g + geom_boxplot() + facet_grid(.~Year)
g <- ggplot(data = df2, aes(x = Year, y = Carloads,na.rm=TRUE))
g + geom_boxplot() + facet_grid(.~Year)
df%>%
mutate(corr=cor(index,commodity)%>%
arrange(desc())
df%>%
group_by(Commodity,Year)%>%
summarise(Carloads=sum(Carloads))->df2
g <- ggplot(data = df2, aes(x = Commodity, y = Carloads,na.rm=TRUE))
g + geom_boxplot() + facet_grid(.~Year)
g <- ggplot(data = df2, aes(x = Year, y = Carloads,na.rm=TRUE))
g + geom_boxplot() + facet_grid(.~Year)
df%>%
group_by(Commodity)%>%
mutate(corr=cor(Index,Carloads))%>%
arrange(desc())
df%>%
group_by(Commodity)%>%
mutate(corr=cor(Index,Carloads,na.rm=TRUE))%>%
arrange(desc())
#q12
df%>%
group_by(Commodity)%>%
mutate(corr=cor(Index,Carloads))%>%
arrange(desc())
df%>%
filter(Commodity=="Crushed Stone, Sand and Gravel")->df2
ggplot(data = df2, aes(x = index, y = Carloads)) +  geom_point(aes(color = class))
filter(Commodity=="Crushed Stone, Sand and Gravel")->df2
ggplot(data = df2, aes(x = Index, y = Carloads)) +  geom_point(aes(color = class))
ggplot(data = df2, aes(x = Index, y = Carloads)) +  geom_point(aes(color = Year))
telco=read_csv('WA_Fn-UseC_-Telco-Customer-Churn.csv')
setwd("~/Data Science Bootcamp January/Project 1")
telco=read_csv('WA_Fn-UseC_-Telco-Customer-Churn.csv')
telco%>%
mutate(Churn2=ifelse(Churn=='Yes',1,0))%>%
summarise(Churn_Rate=mean(Churn2),Observations=n())-> Overall_Churn_Rate
char_tab = function(infile,var){
infile%>%
mutate(Churn2=ifelse(Churn=='Yes',1,0))%>%
group_by_at(var)%>%
summarise(Observations=n(), Churn_Rate=mean(Churn2),
Index=round(mean(Churn2)/0.2653699 * 100)
) -> outfile
return(outfile)
}
telco%>%
mutate(MonthlyCharges.decile = cut(MonthlyCharges,
breaks= quantile(MonthlyCharges,
probs= seq(0, 1, by= 0.1),na.rm=TRUE),
include.lowest= TRUE, labels= c(1:10)))%>%
mutate(Churn2=ifelse(Churn=='Yes',1,0))%>%
group_by(MonthlyCharges.decile)%>%
summarise(min(MonthlyCharges), max(MonthlyCharges), Observations=n(),Churn_Rate=mean(Churn2),
Index=round(mean(Churn2)/0.2653699 * 100),
)-> MonthlyCharges_Tab
telco%>%
mutate(TotalCharges.decile = cut(TotalCharges,
breaks= quantile(TotalCharges,
probs= seq(0, 1, by= 0.1),na.rm=TRUE),
include.lowest= TRUE, labels= c(1:10)))%>%
mutate(Churn2=ifelse(Churn=='Yes',1,0))%>%
group_by(TotalCharges.decile)%>%
summarise(min(TotalCharges), max(TotalCharges), Observations=n(),Churn_Rate=mean(Churn2),
Index=round(mean(Churn2)/0.2653699 * 100),
)-> TotalCharges_Tab
telco%>%
mutate(MonthlyCharges.decile = cut(MonthlyCharges,
breaks= quantile(MonthlyCharges,
probs= seq(0, 1, by= 0.1),na.rm=TRUE),
include.lowest= TRUE, labels= c(1:10)))%>%
mutate(Churn2=ifelse(Churn=='Yes',1,0))%>%
group_by(MonthlyCharges.decile)%>%
summarise(min(MonthlyCharges), max(MonthlyCharges), Observations=n(),Churn_Rate=mean(Churn2),
Index=round(mean(Churn2)/0.2653699 * 100),
)-> MonthlyCharges_Tab
telco%>%
mutate(TotalCharges.decile = cut(TotalCharges,
breaks= quantile(TotalCharges,
probs= seq(0, 1, by= 0.1),na.rm=TRUE),
include.lowest= TRUE, labels= c(1:10)))%>%
mutate(Churn2=ifelse(Churn=='Yes',1,0))%>%
group_by(TotalCharges.decile)%>%
summarise(min(TotalCharges), max(TotalCharges), Observations=n(),Churn_Rate=mean(Churn2),
Index=round(mean(Churn2)/0.2653699 * 100),
)-> TotalCharges_Tab
char_tab = function(infile,var){
infile%>%
mutate(Churn2=ifelse(Churn=='Yes',1,0))%>%
group_by_at(var)%>%
summarise(Observations=n(), Churn_Rate=mean(Churn2),
Index=round(mean(Churn2)/0.2653699 * 100)
) -> outfile
return(outfile)
}
SeniorCitizen_tab=char_tab(telco,'SeniorCitizen')
View(SeniorCitizen_tab)
Parnter_tab = char_tab(telco,"Partner")
View(Parnter_tab)
gender_tab=char_tab(telco,'gender')
View(gender_tab)
Dependents_tab=char_tab(telco,'Dependents')
View(Dependents_tab)
PhoneService_tab=char_tab(telco,PhoneService)
PhoneService_tab=char_tab(telco,'PhoneService')
View(PhoneService_tab)
Dependents_tab=char_tab(telco,'Dependents')
View(Dependents_tab)
View(Parnter_tab)
MultipleLines_tab=char_tab(telco,'MultipleLines')
View(MultipleLines_tab)
OnlineSecurity_tab=char_tab(telco,'OnlineSecurity')
View(OnlineSecurity_tab)
OnlineBackup_tab=char_tab(telco,'OnlineBackup')
View(OnlineBackup_tab)
DeviceProtection_tab=(telco,'DeviceProtection')
DeviceProtection_tab=char_tab(telco,'DeviceProtection')
View(DeviceProtection_tab)
str(telco)
TechSupport
PaymentMethod_tab=char_tab(telco,'PaymentMethod ')
PaymentMethod_tab=char_tab(telco,'PaymentMethod')
View(PaymentMethod_tab)
TechSupport_tab=char_tab(telco,'TechSupport')
View(TechSupport_tab)
View(TechSupport_tab)
StreamingTV_tab=char_tab(telco,'StreamingTV')
View(StreamingTV_tab)
StreamingMovies_tab=char_tab(telco,'StreamingMovies')
View(StreamingMovies_tab)
Contract_tab=char_tab(telco,'Contract')
View(Contract_tab)
PaperlessBilling_tab=char_tab(telco,'PaperlessBilling')
View(PaperlessBilling_tab)
library(dplyr)
library(readr)
library(stringr)
library(tidyr)
library(lubridate)
library(ggplot2)
library(datasets)
library("Hmisc")
library(Hmisc)
temp = read.table('https://s3.amazonaws.com/graderdata/Temp.txt', header = TRUE)
summary(temp)
describe(temp)
library(pastecs)
install.packages("pastecs")
library(pastecs)
stat.desc(temp)
summary(temp)
temp = read.table('https://s3.amazonaws.com/graderdata/Temp.txt', header = TRUE)
summary(temp)
sapply(temp,sd())
sd(Body.temp)
temp = read.table('https://s3.amazonaws.com/graderdata/Temp.txt', header = TRUE)
summary(temp)
sd(temp$Body.temp)
sd(temp$gender)
sd(temp$Heart.Rate)
# nbr.val, nbr.null, nbr.na, min max, range, sum,
# median, mean, SE.mean, CI.mean, var, std.dev, coef.var
temp = read.table('https://s3.amazonaws.com/graderdata/Temp.txt', header = TRUE)
summary(temp)
sd(temp$Body.temp)
sd(temp$gender)
sd(temp$Heart.Rate)
# nbr.val, nbr.null, nbr.na, min max, range, sum,
# median, mean, SE.mean, CI.mean, var, std.dev, coef.var
temp = read.table('https://s3.amazonaws.com/graderdata/Temp.txt', header = TRUE)
summary(temp)
sd(temp$Body.temp)
sd(temp$gender)
sd(temp$Heart.Rate)
ggplot(data = temp, aes(x = Heart.Rate, y = Body.temp)) +  geom_point()
temp = read.table('https://s3.amazonaws.com/graderdata/Temp.txt', header = TRUE)
summary(temp)
sd(temp$Body.Temp)
sd(temp$gender)
sd(temp$Heart.Rate)
ggplot(data = temp, aes(x = Heart.Rate, y = Body.temp)) +  geom_point()
temp = read.table('https://s3.amazonaws.com/graderdata/Temp.txt', header = TRUE)
summary(temp)
sd(temp$Body.Temp)
sd(temp$gender)
sd(temp$Heart.Rate)
ggplot(data = temp, aes(x = Heart.Rate, y = Body.Temp)) +  geom_point()
# nbr.val, nbr.null, nbr.na, min max, range, sum,
# median, mean, SE.mean, CI.mean, var, std.dev, coef.var
temp = read.table('https://s3.amazonaws.com/graderdata/Temp.txt', header = TRUE)
summary(temp)
sd(temp$Body.Temp)
sd(temp$gender)
sd(temp$Heart.Rate)
ggplot(data = temp, aes(x = Heart.Rate, y = Body.Temp)) +  geom_point()
# nbr.val, nbr.null, nbr.na, min max, range, sum,
# median, mean, SE.mean, CI.mean, var, std.dev, coef.var
temp = read.table('https://s3.amazonaws.com/graderdata/Temp.txt', header = TRUE)
summary(temp)
sd(temp$Body.Temp)
sd(temp$gender)
sd(temp$Heart.Rate)
ggplot(data = temp, aes(x = Heart.Rate, y = Body.Temp)) +  geom_point()
# nbr.val, nbr.null, nbr.na, min max, range, sum,
# median, mean, SE.mean, CI.mean, var, std.dev, coef.var
temp = read.table('https://s3.amazonaws.com/graderdata/Temp.txt', header = TRUE)
summary(temp)
sd(temp$Body.Temp)
sd(temp$gender)
sd(temp$Heart.Rate)
ggplot(data = temp, aes(x = Heart.Rate, y = Body.Temp)) +  geom_point()
# nbr.val, nbr.null, nbr.na, min max, range, sum,
# median, mean, SE.mean, CI.mean, var, std.dev, coef.var
summary(temp)
sd(temp$Body.Temp)
sd(temp$gender)
sd(temp$Heart.Rate)
ggplot(data = temp, aes(x = Heart.Rate, y = Body.Temp)) +  geom_point()
temp = read.table('https://s3.amazonaws.com/graderdata/Temp.txt', header = TRUE)
summary(temp)
sd(temp$Body.Temp)
sd(temp$gender)
sd(temp$Heart.Rate)
ggplot(data = temp, aes(x = Heart.Rate, y = Body.Temp)) +  geom_point()
g <- ggplot(data = temp, aes(x = Heart.Rate))+ geom_histogram()
# nbr.val, nbr.null, nbr.na, min max, range, sum,
# median, mean, SE.mean, CI.mean, var, std.dev, coef.var
ggplot(data = temp, aes(x = Heart.Rate))+ geom_histogram()
temp = read.table('https://s3.amazonaws.com/graderdata/Temp.txt', header = TRUE)
summary(temp)
sd(temp$Body.Temp)
sd(temp$gender)
sd(temp$Heart.Rate)
ggplot(data = temp, aes(x = Heart.Rate, y = Body.Temp)) +  geom_point()
ggplot(data = temp, aes(x = Heart.Rate))+ geom_histogram()
ggplot(data = temp, aes(x = Body.Temp))+ geom_histogram()
# nbr.val, nbr.null, nbr.na, min max, range, sum,
# median, mean, SE.mean, CI.mean, var, std.dev, coef.var
summary(temp)
sd(temp$Body.Temp)
sd(temp$gender)
sd(temp$Heart.Rate)
mean(temp$Body.Temp)
t.statistic = (mean(temp$Body.Temp) - 98.6)/(sd(temp$Body.Temp)/sqrt(139))
t.statistic
t.test((mean(temp$Body.Temp),mu=98.6) # Ho: mu=98.6
t.test((mean(temp$Body.Temp) mu=98.6) # Ho: mu=98.6
t.test((mean(temp$Body.Temp), mu=98.6) # Ho: mu=98.6
data(PlantGrowth)
force(PlantGrowth)
View(PlantGrowth)
data(PlantGrowth)
g <- ggplot(data = PlantGrowth, aes(x = group, y = weight))
g + geom_boxplot()"
g <- ggplot(data = PlantGrowth, aes(x = group, y = weight))
g + geom_boxplot()
data(HairEyeColor)
mosaicplot(HairEyeColor, shade = TRUE)
library(dplyr)
library(readr)
library(stringr)
library(tidyr)
library(lubridate)
library(ggplot2)
library(datasets)
data(HairEyeColor)
mosaicplot(HairEyeColor, shade = TRUE)
car=read_csv('carloads.csv')
ism=read_csv('ism.csv')
cars3=read_csv('q3_carloads_reshape2.csv')
telco%>%
mutate(Churn2=ifelse(Churn=='Yes',1,0))%>%
group_by(InternetService)%>%
summarise(Observations=n(), Churn_Rate=mean(Churn2),
Index=round(mean(Churn2)/0.2653699 * 100)
)->InternetService
View(InternetService)
View(InternetService)
str(telco)
ggplot(data = InternetService,aes(x =InternetService,y=Index))
cut)) + geom_col()
ggplot(data = InternetService,aes(x =InternetService,y=Index))
+ geom_col()
ggplot(data = InternetService,aes(x = factor(InternetService),y=Index))
+ geom_col()
install.packages("gccookbook")
library(gcookbook)
install.packages("gcookbook")
library(gcookbook)
ggplot(pg_mean,aes(x=group,y=weight)) + geom_col()
data(pg_mean)
str(pg_mean)
telco%>%
mutate(tenure.decile = cut(tenure,
breaks= quantile(tenure,
probs= seq(0, 1, by= 0.1)),
include.lowest= TRUE, labels= c(1:10)))%>%
mutate(Churn2=ifelse(Churn=='Yes',1,0))%>%
group_by(tenure.decile)%>%
summarise(min(tenure), max(tenure), Observations=n(),Churn_Rate=mean(Churn2),
Index=round(mean(Churn2)/0.2653699 * 100),
)-> tenure_Tab
telco%>%
mutate(tenure.decile = cut(tenure,
breaks= quantile(tenure,
probs= seq(0, 1, by= 0.1)),
include.lowest= TRUE, labels= c(1:10)))%>%
mutate(Churn2=ifelse(Churn=='Yes',1,0))%>%
group_by(tenure.decile)%>%
summarise(min(tenure), max(tenure), Observations=n(),Churn_Rate=mean(Churn2),
Index=round(mean(Churn2)/0.2653699 * 100),
)-> tenure_Tab
View(tenure_Tab)
View(tenure_Tab)
View(InternetService)
View(telco)
install
str(telco)
View(InternetService)
ggplot(data = InternetService,aes(x = factor(InternetService),y=Index))
+ geom_col()
View(InternetService)
ggplot(data = InternetService,aes(x = factor(InternetService),y=Index))
+ geom_bar()
ggplot(data = InternetService,aes(x = factor(InternetService),y=Index))  + geom_col()
ggplot(data = InternetService,aes(x = factor(InternetService),y=Index))  +
geom_col()
#
class(InternetService)
class(telco$InternetService)
class(InternetService$InternetService)
View(Parnter_tab)
View(Dependents_tab)
ggplot(data = InternetService,aes(x = InternetService,y=Index))  + geom_col()
ggplot(data = tenure_Tab,aes(x = factor(tenure.decile),y=Index))  + geom_col()
#
ggplot(data = MonthlyCharges_Tab,aes(x = factor(MonthlyCharges.decile),y=Index))  + geom_col()
ggplot(data = TotalCharges_Tab,aes(x = factor(TotalCharges.decile),y=Index))  + geom_col()
View(MonthlyCharges_Tab)
View(InternetService)
View(OnlineSecurity_tab)
View(telco)
unique(telco[, 'gender'])
unique(telco[, 'gender']) + c("All")
concat(unique(telco[, 'gender']),c("All"))
c(unique(telco[, 'gender']), "All")
c(unique(telco[, 'gender']), c("All"))
class(unique(telco[, 'gender']))
c(as.character(unique(telco[, 'gender'])), c("All"))
as.character(unique(telco[, 'gender']))
as.vector(unique(telco[, 'gender']))
c(as.vector(unique(telco[, 'gender'])), c("All"))
c(as.vector(unique(telco[, 'gender'])), "All")
class(as.vector(unique(telco[, 'gender'])))
unique(telco[, 'gender']))$gender
unique(telco[, 'gender'])$gender
c(unique(telco[, 'gender'])$gender, "All")
shiny::runApp('Churn/Churn')
runApp('Churn/Churn')
runApp('Churn/Churn')
ggplot(data = tenure_Tab,aes(x = factor(tenure.decile),y=Index))  + geom_col()
ggplot(data = InternetService,aes(x = InternetService,y=Index))  + geom_col()
ggplot(data = tenure_Tab,aes(x = factor(tenure.decile),y=Index))  + geom_col()
telco_tenure = telco%>%
mutate(tenure.decile = cut(tenure,
breaks= quantile(tenure,
probs= seq(0, 1, by= 0.1)),
include.lowest= TRUE, labels= c(1:10)))%>%
mutate(Churn2=ifelse(Churn=='Yes',1,0))%>%
filter(gender == 'Male') %>%
# filter based on widget values
# Some widgets may be:
# - Gender
# - Senior Citizen
# - Partner
group_by(tenure.decile)%>%
summarise(min(tenure), max(tenure), Observations=n(), Churn_Rate=mean(Churn2),
Index=round(mean(Churn2)/0.2653699 * 100)
)
View(telco_tenure)
ggplot(data = telco_tenure, aes(x = factor(tenure.decile),y=Index))  + geom_col()
ggplot(data = tenure_Tab,aes(x = factor(tenure.decile),y=Index))  + geom_col()
ggplot(data = telco_tenure, aes(x = factor(tenure.decile),y=Index))  + geom_col()
runApp('Churn/Churn')
runApp('Churn/Churn')
runApp('Churn/Churn')
runApp('Churn/Churn')
runApp('Churn/Churn')
runApp('Churn/Churn')
runApp('Churn/Churn')
runApp('Churn/Churn')
View(temp)
View(telco)
runApp('Churn/Churn')
telco <- telco %>%
mutate(SeniorCitizen = ifelse(0, 'No', 'Yes'))
View(telco)
telco=read_csv('WA_Fn-UseC_-Telco-Customer-Churn.csv')
View(telco)
View(SeniorCitizen_tab)
telco <- telco %>%
mutate(SeniorCitizen = ifelse(1, 'No', 'Yes'))
View(telco)
telco=read_csv('WA_Fn-UseC_-Telco-Customer-Churn.csv')
View(telco)
help(ifelse)
View(telco)
telco <- telco %>%
mutate(SeniorCitizen = ifelse(SeniorCitizen == 0, 'No', 'Yes'))
View(telco)
runApp('Churn/Churn')
runApp('Churn/Churn')
runApp('Churn/Churn')
runApp('Churn/Churn')
str(telco)
View(OnlineSecurity_tab)
View(OnlineSecurity_tab)
runApp('Churn/Churn')
runApp('Churn/Churn')
runApp('Churn/Churn')
runApp('Churn/Churn')
class(telco$SeniorCitizen)
runApp('Churn/Churn')
runApp()
runApp('Churn/Churn')
runApp('Churn/Churn')
runApp('Churn/Churn')
runApp('Churn/Churn')
str(telco)
runApp('Churn/Churn')
runApp('Churn/Churn')
runApp('Churn/Churn')
runApp('Churn/Churn')
runApp('Churn/Churn')
runApp('Churn/Churn')
install.packages("RColorBrewer")
library(RColorBrewer)
display.brewer.all()
library(RColorBrewer)
display.brewer.all()
install.packages("ggthemes")
runApp('Churn/Churn')
runApp('Churn/Churn')
runApp('Churn/Churn')
runApp('Churn/Churn')
install.packages("ggthemes")
runApp('Churn/Churn')
runApp('Churn/Churn')
View(OnlineSecurity_tab)
View(OnlineSecurity_tab)
runApp('Churn/Churn')
library (googlevis)
library (googleVis)
install.packages("googleVis")
library(googleVis)
demo(googleVis)
if (input$gender == 'All' && input$senior == 'All'){
telco %>%
telco%>%
mutate(Churn2=ifelse(Churn=='Yes',1,0))%>%
group_by(InternetService)%>%
summarise(Observations=n(), Churn_Rate=mean(Churn2),
Index=round(mean(Churn2)/0.2653699 * 100)
)->InternetService
}) # Close reactived
runApp('Churn/Churn')
runApp()
install.packages("plotly")
library(plotly)
runApp('Churn/Churn')
runApp('Churn/Churn')
runApp('Churn/Churn')
runApp('Churn/Churn')
runApp('Churn/Churn')
runApp('Churn/Churn')
runApp('Churn/Churn')
runApp('Churn/Churn')
runApp('Churn/Churn')
runApp('Churn/Churn')
rsconnect::setAccountInfo(name='deniseg',
token='38D24C477E78E1A32411CF8EADC2628B',
secret='<SECRET>')
token='38D24C477E78E1A32411CF8EADC2628B',secret='<SECRET>')
rsconnect::setAccountInfo(name='deniseg',token='38D24C477E78E1A32411CF8EADC2628B', secret='<SECRET>')
library(googleVis)
head(mtcars, n = 10)
runApp('Churn/Churn')
runApp('Churn/Churn')
runApp('Churn/Churn')
runApp()
runApp()
runApp()
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,/////
rsconnect::setAccountInfo(name='deniseg', token='38D24C477E78E1A32411CF8EADC2628B', secret='OQjUKhYbzI0QOu5ud6Bz9GwKhyLcsVTWmBRQvE9J')
runApp('Churn/Churn')
runApp('Churn/Churn')
runApp('Churn/Churn')
runApp('Churn/Churn')
runApp('Churn/Churn')
runApp('Churn/Churn')
